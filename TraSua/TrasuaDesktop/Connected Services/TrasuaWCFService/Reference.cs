//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrasuaDesktop.TrasuaWCFService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TrasuaWCFService.IWCF_Trasua")]
    public interface IWCF_Trasua {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/AddAccount", ReplyAction="http://tempuri.org/IWCF_Trasua/AddAccountResponse")]
        bool AddAccount(string sessionID, string username, string password, int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/AddAccount", ReplyAction="http://tempuri.org/IWCF_Trasua/AddAccountResponse")]
        System.Threading.Tasks.Task<bool> AddAccountAsync(string sessionID, string username, string password, int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/EditPasswordAccount", ReplyAction="http://tempuri.org/IWCF_Trasua/EditPasswordAccountResponse")]
        bool EditPasswordAccount(string sessionID, int accountID, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/EditPasswordAccount", ReplyAction="http://tempuri.org/IWCF_Trasua/EditPasswordAccountResponse")]
        System.Threading.Tasks.Task<bool> EditPasswordAccountAsync(string sessionID, int accountID, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/EditPermissionAccount", ReplyAction="http://tempuri.org/IWCF_Trasua/EditPermissionAccountResponse")]
        bool EditPermissionAccount(string sessionID, int accountID, int newGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/EditPermissionAccount", ReplyAction="http://tempuri.org/IWCF_Trasua/EditPermissionAccountResponse")]
        System.Threading.Tasks.Task<bool> EditPermissionAccountAsync(string sessionID, int accountID, int newGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/DeleteAccount", ReplyAction="http://tempuri.org/IWCF_Trasua/DeleteAccountResponse")]
        bool DeleteAccount(string sessionID, int accountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/DeleteAccount", ReplyAction="http://tempuri.org/IWCF_Trasua/DeleteAccountResponse")]
        System.Threading.Tasks.Task<bool> DeleteAccountAsync(string sessionID, int accountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/EditStatusAccount", ReplyAction="http://tempuri.org/IWCF_Trasua/EditStatusAccountResponse")]
        bool EditStatusAccount(string sessionID, int accountID, bool newStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/EditStatusAccount", ReplyAction="http://tempuri.org/IWCF_Trasua/EditStatusAccountResponse")]
        System.Threading.Tasks.Task<bool> EditStatusAccountAsync(string sessionID, int accountID, bool newStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getAccountID", ReplyAction="http://tempuri.org/IWCF_Trasua/getAccountIDResponse")]
        int getAccountID(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getAccountID", ReplyAction="http://tempuri.org/IWCF_Trasua/getAccountIDResponse")]
        System.Threading.Tasks.Task<int> getAccountIDAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addBill", ReplyAction="http://tempuri.org/IWCF_Trasua/addBillResponse")]
        int addBill(string sessionID, int customerID, bool statusBill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addBill", ReplyAction="http://tempuri.org/IWCF_Trasua/addBillResponse")]
        System.Threading.Tasks.Task<int> addBillAsync(string sessionID, int customerID, bool statusBill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editBill", ReplyAction="http://tempuri.org/IWCF_Trasua/editBillResponse")]
        bool editBill(string sessionID, int billID, int customerID, bool statusBill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editBill", ReplyAction="http://tempuri.org/IWCF_Trasua/editBillResponse")]
        System.Threading.Tasks.Task<bool> editBillAsync(string sessionID, int billID, int customerID, bool statusBill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addBillDetail", ReplyAction="http://tempuri.org/IWCF_Trasua/addBillDetailResponse")]
        bool addBillDetail(string sessionID, int billID, int itemID, int numberItem, bool typeItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addBillDetail", ReplyAction="http://tempuri.org/IWCF_Trasua/addBillDetailResponse")]
        System.Threading.Tasks.Task<bool> addBillDetailAsync(string sessionID, int billID, int itemID, int numberItem, bool typeItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editBillDetail", ReplyAction="http://tempuri.org/IWCF_Trasua/editBillDetailResponse")]
        bool editBillDetail(string sessionID, int billID, int itemID, int nNumberItem, bool typeItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editBillDetail", ReplyAction="http://tempuri.org/IWCF_Trasua/editBillDetailResponse")]
        System.Threading.Tasks.Task<bool> editBillDetailAsync(string sessionID, int billID, int itemID, int nNumberItem, bool typeItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addCustomer", ReplyAction="http://tempuri.org/IWCF_Trasua/addCustomerResponse")]
        int addCustomer(string fullname, bool sex, string birthday, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addCustomer", ReplyAction="http://tempuri.org/IWCF_Trasua/addCustomerResponse")]
        System.Threading.Tasks.Task<int> addCustomerAsync(string fullname, bool sex, string birthday, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editCustomer", ReplyAction="http://tempuri.org/IWCF_Trasua/editCustomerResponse")]
        bool editCustomer(string sessionID, string fullname, bool sex, string birthday, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editCustomer", ReplyAction="http://tempuri.org/IWCF_Trasua/editCustomerResponse")]
        System.Threading.Tasks.Task<bool> editCustomerAsync(string sessionID, string fullname, bool sex, string birthday, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/acceptCustomer", ReplyAction="http://tempuri.org/IWCF_Trasua/acceptCustomerResponse")]
        bool acceptCustomer(string sessionID, int CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/acceptCustomer", ReplyAction="http://tempuri.org/IWCF_Trasua/acceptCustomerResponse")]
        System.Threading.Tasks.Task<bool> acceptCustomerAsync(string sessionID, int CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addAccountToCustomer", ReplyAction="http://tempuri.org/IWCF_Trasua/addAccountToCustomerResponse")]
        bool addAccountToCustomer(int CustomerID, int AccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addAccountToCustomer", ReplyAction="http://tempuri.org/IWCF_Trasua/addAccountToCustomerResponse")]
        System.Threading.Tasks.Task<bool> addAccountToCustomerAsync(int CustomerID, int AccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getAllCustomer", ReplyAction="http://tempuri.org/IWCF_Trasua/getAllCustomerResponse")]
        string getAllCustomer(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getAllCustomer", ReplyAction="http://tempuri.org/IWCF_Trasua/getAllCustomerResponse")]
        System.Threading.Tasks.Task<string> getAllCustomerAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getCustomerByID", ReplyAction="http://tempuri.org/IWCF_Trasua/getCustomerByIDResponse")]
        string getCustomerByID(string sessionID, int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getCustomerByID", ReplyAction="http://tempuri.org/IWCF_Trasua/getCustomerByIDResponse")]
        System.Threading.Tasks.Task<string> getCustomerByIDAsync(string sessionID, int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getAllDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/getAllDrinkResponse")]
        string getAllDrink();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getAllDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/getAllDrinkResponse")]
        System.Threading.Tasks.Task<string> getAllDrinkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getDrinkByType", ReplyAction="http://tempuri.org/IWCF_Trasua/getDrinkByTypeResponse")]
        string getDrinkByType(int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getDrinkByType", ReplyAction="http://tempuri.org/IWCF_Trasua/getDrinkByTypeResponse")]
        System.Threading.Tasks.Task<string> getDrinkByTypeAsync(int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/searchDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/searchDrinkResponse")]
        string searchDrink(string txSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/searchDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/searchDrinkResponse")]
        System.Threading.Tasks.Task<string> searchDrinkAsync(string txSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getAllType", ReplyAction="http://tempuri.org/IWCF_Trasua/getAllTypeResponse")]
        string getAllType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getAllType", ReplyAction="http://tempuri.org/IWCF_Trasua/getAllTypeResponse")]
        System.Threading.Tasks.Task<string> getAllTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getTypeByID", ReplyAction="http://tempuri.org/IWCF_Trasua/getTypeByIDResponse")]
        string getTypeByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getTypeByID", ReplyAction="http://tempuri.org/IWCF_Trasua/getTypeByIDResponse")]
        System.Threading.Tasks.Task<string> getTypeByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getDrinkByID", ReplyAction="http://tempuri.org/IWCF_Trasua/getDrinkByIDResponse")]
        string getDrinkByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getDrinkByID", ReplyAction="http://tempuri.org/IWCF_Trasua/getDrinkByIDResponse")]
        System.Threading.Tasks.Task<string> getDrinkByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addNewDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/addNewDrinkResponse")]
        int addNewDrink(string sessionID, string name, string description, int typeDrink, bool status, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addNewDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/addNewDrinkResponse")]
        System.Threading.Tasks.Task<int> addNewDrinkAsync(string sessionID, string name, string description, int typeDrink, bool status, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addNewTypeDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/addNewTypeDrinkResponse")]
        int addNewTypeDrink(string sessionID, string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addNewTypeDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/addNewTypeDrinkResponse")]
        System.Threading.Tasks.Task<int> addNewTypeDrinkAsync(string sessionID, string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/editDrinkResponse")]
        bool editDrink(string sessionID, int drinkID, string name, string description, int typeDrink, bool status, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/editDrinkResponse")]
        System.Threading.Tasks.Task<bool> editDrinkAsync(string sessionID, int drinkID, string name, string description, int typeDrink, bool status, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/changeStatusDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/changeStatusDrinkResponse")]
        bool changeStatusDrink(string sessionID, int drinkID, bool status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/changeStatusDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/changeStatusDrinkResponse")]
        System.Threading.Tasks.Task<bool> changeStatusDrinkAsync(string sessionID, int drinkID, bool status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editTypeDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/editTypeDrinkResponse")]
        bool editTypeDrink(string sessionID, int typeDrinkID, string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editTypeDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/editTypeDrinkResponse")]
        System.Threading.Tasks.Task<bool> editTypeDrinkAsync(string sessionID, int typeDrinkID, string name, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/deleteDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/deleteDrinkResponse")]
        bool deleteDrink(string sessionID, int drinkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/deleteDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/deleteDrinkResponse")]
        System.Threading.Tasks.Task<bool> deleteDrinkAsync(string sessionID, int drinkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/deleteTypeDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/deleteTypeDrinkResponse")]
        bool deleteTypeDrink(string sessionID, int typeDrinkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/deleteTypeDrink", ReplyAction="http://tempuri.org/IWCF_Trasua/deleteTypeDrinkResponse")]
        System.Threading.Tasks.Task<bool> deleteTypeDrinkAsync(string sessionID, int typeDrinkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getAllTopping", ReplyAction="http://tempuri.org/IWCF_Trasua/getAllToppingResponse")]
        string getAllTopping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getAllTopping", ReplyAction="http://tempuri.org/IWCF_Trasua/getAllToppingResponse")]
        System.Threading.Tasks.Task<string> getAllToppingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/searchTopping", ReplyAction="http://tempuri.org/IWCF_Trasua/searchToppingResponse")]
        string searchTopping(string txSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/searchTopping", ReplyAction="http://tempuri.org/IWCF_Trasua/searchToppingResponse")]
        System.Threading.Tasks.Task<string> searchToppingAsync(string txSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getToppingByID", ReplyAction="http://tempuri.org/IWCF_Trasua/getToppingByIDResponse")]
        string getToppingByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getToppingByID", ReplyAction="http://tempuri.org/IWCF_Trasua/getToppingByIDResponse")]
        System.Threading.Tasks.Task<string> getToppingByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addNewTopping", ReplyAction="http://tempuri.org/IWCF_Trasua/addNewToppingResponse")]
        int addNewTopping(string sessionID, string name, string description, bool status, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addNewTopping", ReplyAction="http://tempuri.org/IWCF_Trasua/addNewToppingResponse")]
        System.Threading.Tasks.Task<int> addNewToppingAsync(string sessionID, string name, string description, bool status, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editTopping", ReplyAction="http://tempuri.org/IWCF_Trasua/editToppingResponse")]
        bool editTopping(string sessionID, int drinkID, string name, string description, bool status, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editTopping", ReplyAction="http://tempuri.org/IWCF_Trasua/editToppingResponse")]
        System.Threading.Tasks.Task<bool> editToppingAsync(string sessionID, int drinkID, string name, string description, bool status, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/changeStatusTopping", ReplyAction="http://tempuri.org/IWCF_Trasua/changeStatusToppingResponse")]
        bool changeStatusTopping(string sessionID, int toppingID, bool status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/changeStatusTopping", ReplyAction="http://tempuri.org/IWCF_Trasua/changeStatusToppingResponse")]
        System.Threading.Tasks.Task<bool> changeStatusToppingAsync(string sessionID, int toppingID, bool status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/deleteTopping", ReplyAction="http://tempuri.org/IWCF_Trasua/deleteToppingResponse")]
        bool deleteTopping(string sessionID, int toppingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/deleteTopping", ReplyAction="http://tempuri.org/IWCF_Trasua/deleteToppingResponse")]
        System.Threading.Tasks.Task<bool> deleteToppingAsync(string sessionID, int toppingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addEmployee", ReplyAction="http://tempuri.org/IWCF_Trasua/addEmployeeResponse")]
        int addEmployee(string sessionID, string fullName, bool sex, string birthday, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addEmployee", ReplyAction="http://tempuri.org/IWCF_Trasua/addEmployeeResponse")]
        System.Threading.Tasks.Task<int> addEmployeeAsync(string sessionID, string fullName, bool sex, string birthday, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editEmployee", ReplyAction="http://tempuri.org/IWCF_Trasua/editEmployeeResponse")]
        bool editEmployee(string sessionID, int employeeID, string fullename, bool sex, string birthday, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editEmployee", ReplyAction="http://tempuri.org/IWCF_Trasua/editEmployeeResponse")]
        System.Threading.Tasks.Task<bool> editEmployeeAsync(string sessionID, int employeeID, string fullename, bool sex, string birthday, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addAccountToEmployee", ReplyAction="http://tempuri.org/IWCF_Trasua/addAccountToEmployeeResponse")]
        bool addAccountToEmployee(string sessionID, int employeeID, int accountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addAccountToEmployee", ReplyAction="http://tempuri.org/IWCF_Trasua/addAccountToEmployeeResponse")]
        System.Threading.Tasks.Task<bool> addAccountToEmployeeAsync(string sessionID, int employeeID, int accountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/deleteEmployee", ReplyAction="http://tempuri.org/IWCF_Trasua/deleteEmployeeResponse")]
        bool deleteEmployee(string sessionID, int employeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/deleteEmployee", ReplyAction="http://tempuri.org/IWCF_Trasua/deleteEmployeeResponse")]
        System.Threading.Tasks.Task<bool> deleteEmployeeAsync(string sessionID, int employeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/_Login", ReplyAction="http://tempuri.org/IWCF_Trasua/_LoginResponse")]
        string _Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/_Login", ReplyAction="http://tempuri.org/IWCF_Trasua/_LoginResponse")]
        System.Threading.Tasks.Task<string> _LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/Logout", ReplyAction="http://tempuri.org/IWCF_Trasua/LogoutResponse")]
        bool Logout(string sessionID, int accountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/Logout", ReplyAction="http://tempuri.org/IWCF_Trasua/LogoutResponse")]
        System.Threading.Tasks.Task<bool> LogoutAsync(string sessionID, int accountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addOrder", ReplyAction="http://tempuri.org/IWCF_Trasua/addOrderResponse")]
        int addOrder(string sessionID, string address, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addOrder", ReplyAction="http://tempuri.org/IWCF_Trasua/addOrderResponse")]
        System.Threading.Tasks.Task<int> addOrderAsync(string sessionID, string address, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/acceptOrder", ReplyAction="http://tempuri.org/IWCF_Trasua/acceptOrderResponse")]
        bool acceptOrder(string sessionID, int orderID, bool accept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/acceptOrder", ReplyAction="http://tempuri.org/IWCF_Trasua/acceptOrderResponse")]
        System.Threading.Tasks.Task<bool> acceptOrderAsync(string sessionID, int orderID, bool accept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/CancelOrder", ReplyAction="http://tempuri.org/IWCF_Trasua/CancelOrderResponse")]
        bool CancelOrder(string sessionID, int orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/CancelOrder", ReplyAction="http://tempuri.org/IWCF_Trasua/CancelOrderResponse")]
        System.Threading.Tasks.Task<bool> CancelOrderAsync(string sessionID, int orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addOrderDetail", ReplyAction="http://tempuri.org/IWCF_Trasua/addOrderDetailResponse")]
        bool addOrderDetail(string sessionID, int orderID, int itemOrderID, int numberOrder, bool typeItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/addOrderDetail", ReplyAction="http://tempuri.org/IWCF_Trasua/addOrderDetailResponse")]
        System.Threading.Tasks.Task<bool> addOrderDetailAsync(string sessionID, int orderID, int itemOrderID, int numberOrder, bool typeItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editOrderDetail", ReplyAction="http://tempuri.org/IWCF_Trasua/editOrderDetailResponse")]
        bool editOrderDetail(string sessionID, int orderID, int itemOrderID, int numberOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/editOrderDetail", ReplyAction="http://tempuri.org/IWCF_Trasua/editOrderDetailResponse")]
        System.Threading.Tasks.Task<bool> editOrderDetailAsync(string sessionID, int orderID, int itemOrderID, int numberOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getAllOrder", ReplyAction="http://tempuri.org/IWCF_Trasua/getAllOrderResponse")]
        string getAllOrder(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getAllOrder", ReplyAction="http://tempuri.org/IWCF_Trasua/getAllOrderResponse")]
        System.Threading.Tasks.Task<string> getAllOrderAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getOrderByID", ReplyAction="http://tempuri.org/IWCF_Trasua/getOrderByIDResponse")]
        string getOrderByID(string sessionID, int OrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getOrderByID", ReplyAction="http://tempuri.org/IWCF_Trasua/getOrderByIDResponse")]
        System.Threading.Tasks.Task<string> getOrderByIDAsync(string sessionID, int OrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getOrderDetail", ReplyAction="http://tempuri.org/IWCF_Trasua/getOrderDetailResponse")]
        string getOrderDetail(string sessionID, int OrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/getOrderDetail", ReplyAction="http://tempuri.org/IWCF_Trasua/getOrderDetailResponse")]
        System.Threading.Tasks.Task<string> getOrderDetailAsync(string sessionID, int OrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/SalesStatistics", ReplyAction="http://tempuri.org/IWCF_Trasua/SalesStatisticsResponse")]
        string SalesStatistics(string sessionID, string typeSatistic, int year, int numberQuarter, int month, int week);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_Trasua/SalesStatistics", ReplyAction="http://tempuri.org/IWCF_Trasua/SalesStatisticsResponse")]
        System.Threading.Tasks.Task<string> SalesStatisticsAsync(string sessionID, string typeSatistic, int year, int numberQuarter, int month, int week);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCF_TrasuaChannel : TrasuaDesktop.TrasuaWCFService.IWCF_Trasua, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCF_TrasuaClient : System.ServiceModel.ClientBase<TrasuaDesktop.TrasuaWCFService.IWCF_Trasua>, TrasuaDesktop.TrasuaWCFService.IWCF_Trasua {
        
        public WCF_TrasuaClient() {
        }
        
        public WCF_TrasuaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCF_TrasuaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCF_TrasuaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCF_TrasuaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddAccount(string sessionID, string username, string password, int groupID) {
            return base.Channel.AddAccount(sessionID, username, password, groupID);
        }
        
        public System.Threading.Tasks.Task<bool> AddAccountAsync(string sessionID, string username, string password, int groupID) {
            return base.Channel.AddAccountAsync(sessionID, username, password, groupID);
        }
        
        public bool EditPasswordAccount(string sessionID, int accountID, string newPassword) {
            return base.Channel.EditPasswordAccount(sessionID, accountID, newPassword);
        }
        
        public System.Threading.Tasks.Task<bool> EditPasswordAccountAsync(string sessionID, int accountID, string newPassword) {
            return base.Channel.EditPasswordAccountAsync(sessionID, accountID, newPassword);
        }
        
        public bool EditPermissionAccount(string sessionID, int accountID, int newGroupID) {
            return base.Channel.EditPermissionAccount(sessionID, accountID, newGroupID);
        }
        
        public System.Threading.Tasks.Task<bool> EditPermissionAccountAsync(string sessionID, int accountID, int newGroupID) {
            return base.Channel.EditPermissionAccountAsync(sessionID, accountID, newGroupID);
        }
        
        public bool DeleteAccount(string sessionID, int accountID) {
            return base.Channel.DeleteAccount(sessionID, accountID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAccountAsync(string sessionID, int accountID) {
            return base.Channel.DeleteAccountAsync(sessionID, accountID);
        }
        
        public bool EditStatusAccount(string sessionID, int accountID, bool newStatus) {
            return base.Channel.EditStatusAccount(sessionID, accountID, newStatus);
        }
        
        public System.Threading.Tasks.Task<bool> EditStatusAccountAsync(string sessionID, int accountID, bool newStatus) {
            return base.Channel.EditStatusAccountAsync(sessionID, accountID, newStatus);
        }
        
        public int getAccountID(string sessionID) {
            return base.Channel.getAccountID(sessionID);
        }
        
        public System.Threading.Tasks.Task<int> getAccountIDAsync(string sessionID) {
            return base.Channel.getAccountIDAsync(sessionID);
        }
        
        public int addBill(string sessionID, int customerID, bool statusBill) {
            return base.Channel.addBill(sessionID, customerID, statusBill);
        }
        
        public System.Threading.Tasks.Task<int> addBillAsync(string sessionID, int customerID, bool statusBill) {
            return base.Channel.addBillAsync(sessionID, customerID, statusBill);
        }
        
        public bool editBill(string sessionID, int billID, int customerID, bool statusBill) {
            return base.Channel.editBill(sessionID, billID, customerID, statusBill);
        }
        
        public System.Threading.Tasks.Task<bool> editBillAsync(string sessionID, int billID, int customerID, bool statusBill) {
            return base.Channel.editBillAsync(sessionID, billID, customerID, statusBill);
        }
        
        public bool addBillDetail(string sessionID, int billID, int itemID, int numberItem, bool typeItem) {
            return base.Channel.addBillDetail(sessionID, billID, itemID, numberItem, typeItem);
        }
        
        public System.Threading.Tasks.Task<bool> addBillDetailAsync(string sessionID, int billID, int itemID, int numberItem, bool typeItem) {
            return base.Channel.addBillDetailAsync(sessionID, billID, itemID, numberItem, typeItem);
        }
        
        public bool editBillDetail(string sessionID, int billID, int itemID, int nNumberItem, bool typeItem) {
            return base.Channel.editBillDetail(sessionID, billID, itemID, nNumberItem, typeItem);
        }
        
        public System.Threading.Tasks.Task<bool> editBillDetailAsync(string sessionID, int billID, int itemID, int nNumberItem, bool typeItem) {
            return base.Channel.editBillDetailAsync(sessionID, billID, itemID, nNumberItem, typeItem);
        }
        
        public int addCustomer(string fullname, bool sex, string birthday, string address) {
            return base.Channel.addCustomer(fullname, sex, birthday, address);
        }
        
        public System.Threading.Tasks.Task<int> addCustomerAsync(string fullname, bool sex, string birthday, string address) {
            return base.Channel.addCustomerAsync(fullname, sex, birthday, address);
        }
        
        public bool editCustomer(string sessionID, string fullname, bool sex, string birthday, string address) {
            return base.Channel.editCustomer(sessionID, fullname, sex, birthday, address);
        }
        
        public System.Threading.Tasks.Task<bool> editCustomerAsync(string sessionID, string fullname, bool sex, string birthday, string address) {
            return base.Channel.editCustomerAsync(sessionID, fullname, sex, birthday, address);
        }
        
        public bool acceptCustomer(string sessionID, int CustomerID) {
            return base.Channel.acceptCustomer(sessionID, CustomerID);
        }
        
        public System.Threading.Tasks.Task<bool> acceptCustomerAsync(string sessionID, int CustomerID) {
            return base.Channel.acceptCustomerAsync(sessionID, CustomerID);
        }
        
        public bool addAccountToCustomer(int CustomerID, int AccountID) {
            return base.Channel.addAccountToCustomer(CustomerID, AccountID);
        }
        
        public System.Threading.Tasks.Task<bool> addAccountToCustomerAsync(int CustomerID, int AccountID) {
            return base.Channel.addAccountToCustomerAsync(CustomerID, AccountID);
        }
        
        public string getAllCustomer(string sessionID) {
            return base.Channel.getAllCustomer(sessionID);
        }
        
        public System.Threading.Tasks.Task<string> getAllCustomerAsync(string sessionID) {
            return base.Channel.getAllCustomerAsync(sessionID);
        }
        
        public string getCustomerByID(string sessionID, int customerID) {
            return base.Channel.getCustomerByID(sessionID, customerID);
        }
        
        public System.Threading.Tasks.Task<string> getCustomerByIDAsync(string sessionID, int customerID) {
            return base.Channel.getCustomerByIDAsync(sessionID, customerID);
        }
        
        public string getAllDrink() {
            return base.Channel.getAllDrink();
        }
        
        public System.Threading.Tasks.Task<string> getAllDrinkAsync() {
            return base.Channel.getAllDrinkAsync();
        }
        
        public string getDrinkByType(int type) {
            return base.Channel.getDrinkByType(type);
        }
        
        public System.Threading.Tasks.Task<string> getDrinkByTypeAsync(int type) {
            return base.Channel.getDrinkByTypeAsync(type);
        }
        
        public string searchDrink(string txSearch) {
            return base.Channel.searchDrink(txSearch);
        }
        
        public System.Threading.Tasks.Task<string> searchDrinkAsync(string txSearch) {
            return base.Channel.searchDrinkAsync(txSearch);
        }
        
        public string getAllType() {
            return base.Channel.getAllType();
        }
        
        public System.Threading.Tasks.Task<string> getAllTypeAsync() {
            return base.Channel.getAllTypeAsync();
        }
        
        public string getTypeByID(int ID) {
            return base.Channel.getTypeByID(ID);
        }
        
        public System.Threading.Tasks.Task<string> getTypeByIDAsync(int ID) {
            return base.Channel.getTypeByIDAsync(ID);
        }
        
        public string getDrinkByID(int ID) {
            return base.Channel.getDrinkByID(ID);
        }
        
        public System.Threading.Tasks.Task<string> getDrinkByIDAsync(int ID) {
            return base.Channel.getDrinkByIDAsync(ID);
        }
        
        public int addNewDrink(string sessionID, string name, string description, int typeDrink, bool status, int price) {
            return base.Channel.addNewDrink(sessionID, name, description, typeDrink, status, price);
        }
        
        public System.Threading.Tasks.Task<int> addNewDrinkAsync(string sessionID, string name, string description, int typeDrink, bool status, int price) {
            return base.Channel.addNewDrinkAsync(sessionID, name, description, typeDrink, status, price);
        }
        
        public int addNewTypeDrink(string sessionID, string name, string description) {
            return base.Channel.addNewTypeDrink(sessionID, name, description);
        }
        
        public System.Threading.Tasks.Task<int> addNewTypeDrinkAsync(string sessionID, string name, string description) {
            return base.Channel.addNewTypeDrinkAsync(sessionID, name, description);
        }
        
        public bool editDrink(string sessionID, int drinkID, string name, string description, int typeDrink, bool status, int price) {
            return base.Channel.editDrink(sessionID, drinkID, name, description, typeDrink, status, price);
        }
        
        public System.Threading.Tasks.Task<bool> editDrinkAsync(string sessionID, int drinkID, string name, string description, int typeDrink, bool status, int price) {
            return base.Channel.editDrinkAsync(sessionID, drinkID, name, description, typeDrink, status, price);
        }
        
        public bool changeStatusDrink(string sessionID, int drinkID, bool status) {
            return base.Channel.changeStatusDrink(sessionID, drinkID, status);
        }
        
        public System.Threading.Tasks.Task<bool> changeStatusDrinkAsync(string sessionID, int drinkID, bool status) {
            return base.Channel.changeStatusDrinkAsync(sessionID, drinkID, status);
        }
        
        public bool editTypeDrink(string sessionID, int typeDrinkID, string name, string description) {
            return base.Channel.editTypeDrink(sessionID, typeDrinkID, name, description);
        }
        
        public System.Threading.Tasks.Task<bool> editTypeDrinkAsync(string sessionID, int typeDrinkID, string name, string description) {
            return base.Channel.editTypeDrinkAsync(sessionID, typeDrinkID, name, description);
        }
        
        public bool deleteDrink(string sessionID, int drinkID) {
            return base.Channel.deleteDrink(sessionID, drinkID);
        }
        
        public System.Threading.Tasks.Task<bool> deleteDrinkAsync(string sessionID, int drinkID) {
            return base.Channel.deleteDrinkAsync(sessionID, drinkID);
        }
        
        public bool deleteTypeDrink(string sessionID, int typeDrinkID) {
            return base.Channel.deleteTypeDrink(sessionID, typeDrinkID);
        }
        
        public System.Threading.Tasks.Task<bool> deleteTypeDrinkAsync(string sessionID, int typeDrinkID) {
            return base.Channel.deleteTypeDrinkAsync(sessionID, typeDrinkID);
        }
        
        public string getAllTopping() {
            return base.Channel.getAllTopping();
        }
        
        public System.Threading.Tasks.Task<string> getAllToppingAsync() {
            return base.Channel.getAllToppingAsync();
        }
        
        public string searchTopping(string txSearch) {
            return base.Channel.searchTopping(txSearch);
        }
        
        public System.Threading.Tasks.Task<string> searchToppingAsync(string txSearch) {
            return base.Channel.searchToppingAsync(txSearch);
        }
        
        public string getToppingByID(int ID) {
            return base.Channel.getToppingByID(ID);
        }
        
        public System.Threading.Tasks.Task<string> getToppingByIDAsync(int ID) {
            return base.Channel.getToppingByIDAsync(ID);
        }
        
        public int addNewTopping(string sessionID, string name, string description, bool status, int price) {
            return base.Channel.addNewTopping(sessionID, name, description, status, price);
        }
        
        public System.Threading.Tasks.Task<int> addNewToppingAsync(string sessionID, string name, string description, bool status, int price) {
            return base.Channel.addNewToppingAsync(sessionID, name, description, status, price);
        }
        
        public bool editTopping(string sessionID, int drinkID, string name, string description, bool status, int price) {
            return base.Channel.editTopping(sessionID, drinkID, name, description, status, price);
        }
        
        public System.Threading.Tasks.Task<bool> editToppingAsync(string sessionID, int drinkID, string name, string description, bool status, int price) {
            return base.Channel.editToppingAsync(sessionID, drinkID, name, description, status, price);
        }
        
        public bool changeStatusTopping(string sessionID, int toppingID, bool status) {
            return base.Channel.changeStatusTopping(sessionID, toppingID, status);
        }
        
        public System.Threading.Tasks.Task<bool> changeStatusToppingAsync(string sessionID, int toppingID, bool status) {
            return base.Channel.changeStatusToppingAsync(sessionID, toppingID, status);
        }
        
        public bool deleteTopping(string sessionID, int toppingID) {
            return base.Channel.deleteTopping(sessionID, toppingID);
        }
        
        public System.Threading.Tasks.Task<bool> deleteToppingAsync(string sessionID, int toppingID) {
            return base.Channel.deleteToppingAsync(sessionID, toppingID);
        }
        
        public int addEmployee(string sessionID, string fullName, bool sex, string birthday, string address) {
            return base.Channel.addEmployee(sessionID, fullName, sex, birthday, address);
        }
        
        public System.Threading.Tasks.Task<int> addEmployeeAsync(string sessionID, string fullName, bool sex, string birthday, string address) {
            return base.Channel.addEmployeeAsync(sessionID, fullName, sex, birthday, address);
        }
        
        public bool editEmployee(string sessionID, int employeeID, string fullename, bool sex, string birthday, string address) {
            return base.Channel.editEmployee(sessionID, employeeID, fullename, sex, birthday, address);
        }
        
        public System.Threading.Tasks.Task<bool> editEmployeeAsync(string sessionID, int employeeID, string fullename, bool sex, string birthday, string address) {
            return base.Channel.editEmployeeAsync(sessionID, employeeID, fullename, sex, birthday, address);
        }
        
        public bool addAccountToEmployee(string sessionID, int employeeID, int accountID) {
            return base.Channel.addAccountToEmployee(sessionID, employeeID, accountID);
        }
        
        public System.Threading.Tasks.Task<bool> addAccountToEmployeeAsync(string sessionID, int employeeID, int accountID) {
            return base.Channel.addAccountToEmployeeAsync(sessionID, employeeID, accountID);
        }
        
        public bool deleteEmployee(string sessionID, int employeeID) {
            return base.Channel.deleteEmployee(sessionID, employeeID);
        }
        
        public System.Threading.Tasks.Task<bool> deleteEmployeeAsync(string sessionID, int employeeID) {
            return base.Channel.deleteEmployeeAsync(sessionID, employeeID);
        }
        
        public string _Login(string username, string password) {
            return base.Channel._Login(username, password);
        }
        
        public System.Threading.Tasks.Task<string> _LoginAsync(string username, string password) {
            return base.Channel._LoginAsync(username, password);
        }
        
        public bool Logout(string sessionID, int accountID) {
            return base.Channel.Logout(sessionID, accountID);
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAsync(string sessionID, int accountID) {
            return base.Channel.LogoutAsync(sessionID, accountID);
        }
        
        public int addOrder(string sessionID, string address, string phoneNumber) {
            return base.Channel.addOrder(sessionID, address, phoneNumber);
        }
        
        public System.Threading.Tasks.Task<int> addOrderAsync(string sessionID, string address, string phoneNumber) {
            return base.Channel.addOrderAsync(sessionID, address, phoneNumber);
        }
        
        public bool acceptOrder(string sessionID, int orderID, bool accept) {
            return base.Channel.acceptOrder(sessionID, orderID, accept);
        }
        
        public System.Threading.Tasks.Task<bool> acceptOrderAsync(string sessionID, int orderID, bool accept) {
            return base.Channel.acceptOrderAsync(sessionID, orderID, accept);
        }
        
        public bool CancelOrder(string sessionID, int orderID) {
            return base.Channel.CancelOrder(sessionID, orderID);
        }
        
        public System.Threading.Tasks.Task<bool> CancelOrderAsync(string sessionID, int orderID) {
            return base.Channel.CancelOrderAsync(sessionID, orderID);
        }
        
        public bool addOrderDetail(string sessionID, int orderID, int itemOrderID, int numberOrder, bool typeItem) {
            return base.Channel.addOrderDetail(sessionID, orderID, itemOrderID, numberOrder, typeItem);
        }
        
        public System.Threading.Tasks.Task<bool> addOrderDetailAsync(string sessionID, int orderID, int itemOrderID, int numberOrder, bool typeItem) {
            return base.Channel.addOrderDetailAsync(sessionID, orderID, itemOrderID, numberOrder, typeItem);
        }
        
        public bool editOrderDetail(string sessionID, int orderID, int itemOrderID, int numberOrder) {
            return base.Channel.editOrderDetail(sessionID, orderID, itemOrderID, numberOrder);
        }
        
        public System.Threading.Tasks.Task<bool> editOrderDetailAsync(string sessionID, int orderID, int itemOrderID, int numberOrder) {
            return base.Channel.editOrderDetailAsync(sessionID, orderID, itemOrderID, numberOrder);
        }
        
        public string getAllOrder(string sessionID) {
            return base.Channel.getAllOrder(sessionID);
        }
        
        public System.Threading.Tasks.Task<string> getAllOrderAsync(string sessionID) {
            return base.Channel.getAllOrderAsync(sessionID);
        }
        
        public string getOrderByID(string sessionID, int OrderID) {
            return base.Channel.getOrderByID(sessionID, OrderID);
        }
        
        public System.Threading.Tasks.Task<string> getOrderByIDAsync(string sessionID, int OrderID) {
            return base.Channel.getOrderByIDAsync(sessionID, OrderID);
        }
        
        public string getOrderDetail(string sessionID, int OrderID) {
            return base.Channel.getOrderDetail(sessionID, OrderID);
        }
        
        public System.Threading.Tasks.Task<string> getOrderDetailAsync(string sessionID, int OrderID) {
            return base.Channel.getOrderDetailAsync(sessionID, OrderID);
        }
        
        public string SalesStatistics(string sessionID, string typeSatistic, int year, int numberQuarter, int month, int week) {
            return base.Channel.SalesStatistics(sessionID, typeSatistic, year, numberQuarter, month, week);
        }
        
        public System.Threading.Tasks.Task<string> SalesStatisticsAsync(string sessionID, string typeSatistic, int year, int numberQuarter, int month, int week) {
            return base.Channel.SalesStatisticsAsync(sessionID, typeSatistic, year, numberQuarter, month, week);
        }
    }
}
